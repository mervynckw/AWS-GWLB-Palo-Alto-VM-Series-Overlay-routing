AWSTemplateFormatVersion: "2010-09-09"

Description: >-
  Security VPC Deployment: VM-Series Deployment with AWS Gateway Load Balancer (GWLB) for Egress Overlay routing and inbound traffic inspection

# ======================================================================================================================
#   Parameters
# ======================================================================================================================

Parameters:

# Management Network CIDR

  RemoteManagementCIDR:
    Description: >-
      Remote Management CIDR to be allowed management access to VM-Series Firewall (e.g. 192.168.0.0/25)
    Type: String
    Default: 0.0.0.0/0
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})\/(\d{1,2})
    ConstraintDescription: Must be a valid CIDR (e.g. 0.0.0.0/0)

# Security VPC CIDR IP Range

  SecurityVPCCIDR:
    Description: >-
      CIDR Address Range for SecurityVPC (e.g. 10.0.0.0/24)
    Type: String
    Default: 10.0.0.0/24
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: Must be in a CIDR (e.g. 192.168.0.0/25)

  # AZ1 Subnets CIDRs

  SecurityVPCNATGWSubnetCIDRAZ1:
    Description: >-
      CIDR for NAT Gateway Subnet (e.g. 10.0.0.0/28)
    Type: String
    Default: 10.0.0.0/28
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: Must be in a CIDR (e.g. 192.168.0.0/28)

  SecurityVPCGWLBESubnetCIDRAZ1:
    Description: >-
      CIDR for GWLBE Subnet (e.g. 10.0.0.16/28)
    Type: String
    Default: 10.0.0.16/28
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: Must be in a CIDR (e.g. 192.168.0.0/28)

  SecurityVPCVMSeriesDataSubnetCIDRAZ1:
    Description: >-
      CIDR for VMSeries Data Subnet (e.g. 10.0.0.48/28)
    Type: String
    Default: 10.0.0.48/28
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: Must be in a CIDR (e.g. 192.168.0.0/28)
    
  SecurityVPCVMSeriesMgmtSubnetCIDRAZ1:
    Description: >-
      CIDR for VMSeries Mgmt Subnet (e.g. 10.0.0.48/28)
    Type: String
    Default: 10.0.0.64/28
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: Must be in a CIDR (e.g. 192.168.0.0/28)
    
  SecurityVPCVMSeriesEngressSubnetCIDRAZ1:
    Description: >-
      CIDR for VMSeries Engress Subnet (e.g. 10.0.0.48/28)
    Type: String
    Default: 10.0.0.80/28
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: Must be in a CIDR (e.g. 192.168.0.0/28)
    
# VM-Series Instance

  VMSeriesInstanceType:
    Description: >-
      More information follow this link: https://docs.paloaltonetworks.com/vm-series/10-0/vm-series-performance-capacity/vm-series-performance-capacity/vm-series-on-aws-models-and-instances.html
    Type: String
    AllowedValues:
      - m3.xlarge
      - m3.2xlarge
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.12xlarge
      - m5.24xlarge
      - m5n.large
      - m5n.xlarge
      - m5n.2xlarge
      - m5n.4xlarge
      - m5n.8xlarge
      - c3.xlarge
      - c3.2xlarge
      - c3.4xlarge
      - c3.8xlarge
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.18xlarge
      - c5n.xlarge
      - c5n.2xlarge
      - c5n.4xlarge
      - c5n.9xlarge
      - c5n.18xlarge
    Default: m5.large

  VMSeriesAMI:
    Description: >-
      AMI reference in the format 'ami-00000000000' for PAN-OS v10.0.2 or above.
    Default: ami-0380c542687575050 #PANOS 10.2.3 BYOL
    Type: String
    AllowedPattern: ami-\w{1,30}
    ConstraintDescription: Must be a valid AMI (e.g. ami-0a00a3780ec15f108)

  EC2KeyPair:
    Description: >-
      AWS EC2 Instance Key Pair for authentication to the VM-Series Firewalls.
    Type: AWS::EC2::KeyPair::KeyName
    AllowedPattern: .+
    ConstraintDescription: Must set an EC2 Key Pair for VM-Series

  VmseriesBootstrapS3BucketName:
    Description: >-
      Enter a AWS S3 Bucket containing the VM-Series Bootstrap files and folders or leave blank if you chose not to configure the firewalls with Bootstrap. For more information follow this link: https://docs.paloaltonetworks.com/vm-series/10-0/vm-series-deployment/bootstrap-the-vm-series-firewall.html
    Type: String
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$|^$
    Default: aws-gwlb-vmseries-1az-bootstrap
    ConstraintDescription: Must be a valid S3 Bucket name or left blank for no Bootstrap.

# ======================================================================================================================
#   Metadata
# ======================================================================================================================

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "Security VPC"
        Parameters:
          - SecurityVPCCIDR
          - SecurityVPCNATGWSubnetCIDRAZ1
          - SecurityVPCGWLBESubnetCIDRAZ1
          - SecurityVPCVMSeriesDataSubnetCIDRAZ1
          - SecurityVPCVMSeriesMgmtSubnetCIDRAZ1
          - SecurityVPCVMSeriesEngressSubnetCIDRAZ1
      -
        Label:
          default: "VM-Series Deployment"
        Parameters:
          - VMSeriesAMI
          - VMSeriesInstanceType
          - EC2KeyPair
          - VmseriesBootstrapS3BucketName
      -
        Label:
          default: "Other Parameters"
        Parameters:
          - RemoteManagementCIDR

    ParameterLabels:
      VmseriesBootstrapS3BucketName:
        default: "AWS S3 Bucket Name containing the VM-Series Bootstrap Information:"
      SecurityVPCCIDR:
        default: "IP CIDR for the Security VPC"
      SecurityVPCNATGWSubnetCIDRAZ1:
        default: "IP CIDR for NAT GW Subnet in AZ1"
      SecurityVPCGWLBESubnetCIDRAZ1:
        default: "IP CIDR for GWLB Endpoint in AZ1"
      SecurityVPCVMSeriesDataSubnetCIDRAZ1:
        default: "IP CIDR for VM-Series Data Plane Interface in AZ1"
      SecurityVPCVMSeriesMgmtSubnetCIDRAZ1:
        default: "IP CIDR for VM-Series Management Plane Interface in AZ1"
      SecurityVPCVMSeriesEngressSubnetCIDRAZ1:
        default: "IP CIDR for VM-Series Engress Interface in AZ1"  
      VMSeriesAMI:
        default: "AMI ID of VM-Series"
      VMSeriesInstanceType:
        default: "EC2 Instance Type for VM-Series"
      EC2KeyPair:
        default: "EC2 Keypair for Authentication to EC2 Instances"
      RemoteManagementCIDR:
        default: "IP CIDR for Allowed Remote Management of the VM-Series"

# ======================================================================================================================
#   Conditions
# ======================================================================================================================

Conditions:
  BootstrapVmseries: !Not [!Equals [!Ref VmseriesBootstrapS3BucketName, ""]]

# ======================================================================================================================
#   Resources
# ======================================================================================================================

Resources:

# ----------------------------------------------------------------------------------------------------------------------
# VPC, IGW, and IGW Attachment
# ----------------------------------------------------------------------------------------------------------------------

  SecurityVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref SecurityVPCCIDR
      Tags:
        - Key: Name
          Value: !Join ['-', [!Ref "AWS::StackName", "SecurityVPC" ]]
  SecurityIGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Join ['-', [!Ref "AWS::StackName", "SecurityVPC-IGW" ]]

  SecurityIGWAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref SecurityIGW
      VpcId: !Ref SecurityVPC

#-----------------------------------------------------------------------------------------------------------------------
# Subnets
#-----------------------------------------------------------------------------------------------------------------------

  NATGWSubnetAZ1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref SecurityVPC
      CidrBlock: !Ref SecurityVPCNATGWSubnetCIDRAZ1
      AvailabilityZone: !Select [ 0, !GetAZs  '' ]
      Tags:
        - Key: Name
          Value: !Join ['-' , [!Ref "AWS::StackName", 'NATGW-AZ1']]                  

  GWLBESubnetAZ1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref SecurityVPC
      CidrBlock: !Ref SecurityVPCGWLBESubnetCIDRAZ1
      AvailabilityZone: !Select [ 0, !GetAZs  '' ]
      Tags:
        - Key: Name
          Value: !Join ['-' , [!Ref "AWS::StackName", 'GWLBE-AZ1']]

  VMSeriesDataSubnetAZ1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref SecurityVPC
      CidrBlock: !Ref SecurityVPCVMSeriesDataSubnetCIDRAZ1
      AvailabilityZone: !Select [ 0, !GetAZs  '' ]
      Tags:
        - Key: Name
          Value: !Join ['-' , [!Ref "AWS::StackName", 'VMSeries-Data-AZ1']]
          
  VMSeriesMgmtSubnetAZ1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref SecurityVPC
      CidrBlock: !Ref SecurityVPCVMSeriesMgmtSubnetCIDRAZ1
      AvailabilityZone: !Select [ 0, !GetAZs  '' ]
      Tags:
        - Key: Name
          Value: !Join ['-' , [!Ref "AWS::StackName", 'VM-Series-MGMT-AZ1']]
          
  VMSeriesEngressSubnetAZ1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref SecurityVPC
      CidrBlock: !Ref SecurityVPCVMSeriesEngressSubnetCIDRAZ1
      AvailabilityZone: !Select [ 0, !GetAZs  '' ]
      Tags:
        - Key: Name
          Value: !Join ['-' , [!Ref "AWS::StackName", 'VM-Series-Engress-AZ1']]              

# ----------------------------------------------------------------------------------------------------------------------
# Route Tables - SecurityVPC - GWLBE
# ----------------------------------------------------------------------------------------------------------------------

  GWLBERouteTableAZ1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref SecurityVPC
      Tags:
        - Key : Name
          Value: !Join ['-' , [!Ref "AWS::StackName", 'GWLBE-AZ1']]

  GWLBEDefaultRouteAZ1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref GWLBERouteTableAZ1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGWAZ1

  GWLBERouteTableAssociationAZ1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref GWLBERouteTableAZ1
      SubnetId: !Ref GWLBESubnetAZ1
      
# ----------------------------------------------------------------------------------------------------------------------
# Route Tables - SecurityVPC - Nat Gateway
# ----------------------------------------------------------------------------------------------------------------------

  NATGWRouteTableAZ1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref SecurityVPC
      Tags:
        - Key : Name
          Value: !Join ['-' , [!Ref "AWS::StackName", 'NATGW-AZ1']]

  NATGWDefaultRouteAZ1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref NATGWRouteTableAZ1
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref SecurityIGW
    DependsOn: 
    - NATGWRouteTableAZ1
    - SecurityIGW

  NATGWRouteTableAssociationAZ1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref NATGWRouteTableAZ1
      SubnetId: !Ref NATGWSubnetAZ1

# ----------------------------------------------------------------------------------------------------------------------
# Route Tables - SecurityVPC - MGMT 
# ----------------------------------------------------------------------------------------------------------------------

  VMSeriesMgmtRouteTableAZ1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref SecurityVPC
      Tags:
        - Key : Name
          Value: !Join ['-' , [!Ref "AWS::StackName", 'VMSeriesMgmt-AZ1']]
          
  VMSeriesMgmtDefaultRouteAZ1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref VMSeriesMgmtRouteTableAZ1
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref SecurityIGW
    DependsOn: 
    - VMSeriesMgmtRouteTableAZ1
    - SecurityIGW
    
  VMSeriesMgmtRouteTableAssociationAZ1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref VMSeriesMgmtRouteTableAZ1
      SubnetId: !Ref VMSeriesMgmtSubnetAZ1
      
# ----------------------------------------------------------------------------------------------------------------------
# SecurityVPC - NAT Gateways with EIPs
# ----------------------------------------------------------------------------------------------------------------------

  NATGWEIPAZ1:
    Type: AWS::EC2::EIP
    DependsOn: SecurityIGWAttachment
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Join ['-' , [!Ref "AWS::StackName", 'NATGW-AZ1']]

  NATGWAZ1:
    Type: AWS::EC2::NatGateway
    Properties:
      SubnetId: !Ref NATGWSubnetAZ1
      AllocationId: !GetAtt NATGWEIPAZ1.AllocationId
      Tags:
        - Key: Name
          Value: !Join ['-' , [!Ref "AWS::StackName", 'NATGW-AZ1']]

# ----------------------------------------------------------------------------------------------------------------------
# Route Table - SecurityVPC - Data
# ----------------------------------------------------------------------------------------------------------------------

  VMSeriesDataRouteTableAZ1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref SecurityVPC
      Tags:
        - Key : Name
          Value: !Join ['-' , [!Ref "AWS::StackName", 'VMSeriesData-AZ1']]

  VMSeriesDataRouteTableAssociationAZ1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref VMSeriesDataRouteTableAZ1
      SubnetId: !Ref VMSeriesDataSubnetAZ1

# ----------------------------------------------------------------------------------------------------------------------
# Route Table - SecurityVPC - Engress
# ----------------------------------------------------------------------------------------------------------------------

  VMSeriesEngressRouteTableAZ1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref SecurityVPC
      Tags:
        - Key : Name
          Value: !Join ['-' , [!Ref "AWS::StackName", 'VMSeriesEngress-AZ1']]
  
  VMSeriesEngressDefaultRouteAZ1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref VMSeriesEngressRouteTableAZ1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGWAZ1
    DependsOn: 
    - VMSeriesEngressRouteTableAZ1
    - NATGWAZ1
    
  VMSeriesEngressRouteTableAssociationAZ1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref VMSeriesEngressRouteTableAZ1
      SubnetId: !Ref VMSeriesEngressSubnetAZ1

# ----------------------------------------------------------------------------------------------------------------------
#  Gateway Load Balancer
# ----------------------------------------------------------------------------------------------------------------------

  GWLB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Join ['-' , [ !Ref "AWS::StackName", 'GWLB' ]]
      Type: gateway
      Subnets: [!Ref VMSeriesDataSubnetAZ1]
      LoadBalancerAttributes:
        - Key: load_balancing.cross_zone.enabled
          Value: true

  GWLBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Join ['-' , [ !Ref "AWS::StackName", 'VMSeries' ]]
      Port: 6081
      Protocol: GENEVE
      HealthCheckPort: 80
      HealthCheckProtocol: TCP
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 20
      VpcId: !Ref SecurityVPC

      TargetType: instance
      Targets:
        - Id: !Ref VMSeriesInstanceAZ1
      Tags:
        - Key: Name
          Value: !Join ['-' , [!Ref "AWS::StackName", 'GWLB']]

  GWLBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref GWLBTargetGroup
      LoadBalancerArn: !Ref GWLB

  # ----------------------------------------------------------------------------------------------------------------------
  #  Gateway Load Balancer - VPC Endpoint Service
  # ----------------------------------------------------------------------------------------------------------------------

  GWLBEService:
    Type: AWS::EC2::VPCEndpointService
    Properties:
      GatewayLoadBalancerArns:
        - !Ref GWLB
      AcceptanceRequired: false

  DescribeGWLBEServiceLambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*
              - Effect: Allow
                Action:
                  - ec2:DescribeVpcEndpointServiceConfigurations
                  - ec2:DescribeVpcEndpointServicePermissions
                  - ec2:DescribeVpcEndpointServices
                Resource: "*"

  DescribeGWLBEService:
    Type: AWS::Lambda::Function
    Properties:
      Handler: "index.handler"
      Role: !GetAtt
        - DescribeGWLBEServiceLambdaExecutionRole
        - Arn
      Code:
        ZipFile: |
          import boto3
          import cfnresponse
          import json
          import logging
          import time
          def handler(event, context):
            time.sleep(420)
            logger = logging.getLogger()
            logger.setLevel(logging.INFO)
            responseData = {}
            responseStatus = cfnresponse.FAILED
            logger.info('Received event: {}'.format(json.dumps(event)))
            if event["RequestType"] == "Delete":
              responseStatus = cfnresponse.SUCCESS
              cfnresponse.send(event, context, responseStatus, responseData)
            if event["RequestType"] == "Create":
              try:
                VpceServiceId = event["ResourceProperties"]["Input"]
              except Exception as e:
                logger.info('VPC Endpoint Service Id retrival failure: {}'.format(e))
              try:
                ec2 = boto3.client('ec2')
              except Exception as e:
                logger.info('boto3.client failure: {}'.format(e))
              try:
                response = ec2.describe_vpc_endpoint_service_configurations(
                  Filters=[
                    {
                      'Name': 'service-id',
                      'Values': [VpceServiceId]
                    }
                  ]
                )
              except Exception as e:
                logger.info('ec2.describe_vpc_endpoint_service_configurations fa: {}'.format(e))
              ServiceName = response['ServiceConfigurations'][0]['ServiceName']
              logger.info('service name: {}'.format(ServiceName))
              responseData['Data'] = ServiceName
              responseStatus = cfnresponse.SUCCESS
              cfnresponse.send(event, context, responseStatus, responseData)
      Runtime: python3.7
      Timeout: 900

  GWLBESerivceName:
    DependsOn: GWLBEService
    Type: Custom::DescribeVpcEndpointServiceConfigurations
    Properties:
      ServiceToken: !GetAtt DescribeGWLBEService.Arn
      Input: !Ref GWLBEService

# ----------------------------------------------------------------------------------------------------------------------
# Security VPC - Gateway Load Balancer Endpoint
# ----------------------------------------------------------------------------------------------------------------------

  GWLBEAZ1:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref SecurityVPC
      ServiceName: !GetAtt GWLBESerivceName.Data
      VpcEndpointType: GatewayLoadBalancer
      SubnetIds: [ !Ref GWLBESubnetAZ1 ]

# ----------------------------------------------------------------------------------------------------------------------
# Security VPC - Management & Data Security Group
# ----------------------------------------------------------------------------------------------------------------------

  VMSeriesManagementSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref SecurityVPC
      GroupDescription: VM-Series Management Security Group
      SecurityGroupIngress:
        - CidrIp: !Ref RemoteManagementCIDR
          FromPort: 22
          ToPort: 22
          IpProtocol: tcp
        - CidrIp: !Ref RemoteManagementCIDR
          FromPort: 443
          ToPort: 443
          IpProtocol: tcp
        - CidrIp: !Ref RemoteManagementCIDR
          FromPort: -1
          ToPort: -1
          IpProtocol: icmp  
      Tags:
        - Key: Name
          Value: !Join [ '-' , [ !Ref "AWS::StackName", 'VMSeries-Management'] ]

  VMSeriesDataSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref SecurityVPC
      GroupDescription: VM-Series Data Security Group
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          FromPort: -1
          ToPort: -1
          IpProtocol: -1
      Tags:
        - Key: Name
          Value: !Join [ '-' , [ !Ref "AWS::StackName", 'VMSeries-Data'] ]


# ----------------------------------------------------------------------------------------------------------------------
# VM-Series Deployment
# ----------------------------------------------------------------------------------------------------------------------

  VMSeriesManagementENIAZ1:
    Type: AWS::EC2::NetworkInterface
    Properties:
      Description: VM-Series Management - AZ1
      GroupSet: [ !Ref VMSeriesManagementSecurityGroup ]
      SubnetId: !Ref VMSeriesMgmtSubnetAZ1
      Tags:
        - Key: Name
          Value: !Join [ '-' , [ !Ref "AWS::StackName", 'VMSeriesManagement-AZ1'] ]

  VMSeriesManagementEIPAZ1:
    Type: AWS::EC2::EIP
    DependsOn: SecurityIGWAttachment
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Join [ '-' , [ !Ref "AWS::StackName", 'VMSeries-Management-AZ1'] ]

  VMSeriesManagementEIPAssociationAZ1:
    Type: AWS::EC2::EIPAssociation
    Properties:
      AllocationId: !GetAtt VMSeriesManagementEIPAZ1.AllocationId
      NetworkInterfaceId: !Ref VMSeriesManagementENIAZ1

  VMSeriesDataENIAZ1:
    Type: AWS::EC2::NetworkInterface
    Properties:
      Description: VM-Series Data - AZ1
      SourceDestCheck: No
      GroupSet: [ !Ref VMSeriesDataSecurityGroup ]
      SubnetId: !Ref VMSeriesDataSubnetAZ1
      Tags:
        - Key: Name
          Value: !Join [ '-' , [ !Ref "AWS::StackName", 'VMSeries-Data-AZ1'] ]
          
  VMSeriesOutBoundENIAZ1:
    Type: AWS::EC2::NetworkInterface
    Properties:
      Description: VM-Series OutBound - AZ1
      SourceDestCheck: No
      GroupSet: [ !Ref VMSeriesDataSecurityGroup ]
      SubnetId: !Ref VMSeriesEngressSubnetAZ1
      Tags:
        - Key: Name
          Value: !Join [ '-' , [ !Ref "AWS::StackName", 'VMSeries-OutBound-AZ1'] ]

  VMSeriesInstanceAZ1:
    Type: AWS::EC2::Instance
    Properties:
      DisableApiTermination: false
      InstanceInitiatedShutdownBehavior: stop
      EbsOptimized: true
      ImageId: !Ref VMSeriesAMI
      InstanceType: !Ref VMSeriesInstanceType
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeType: gp2
            DeleteOnTermination: true
            VolumeSize: 60
      KeyName: !Ref EC2KeyPair
      Monitoring: false
      Tags:
        - Key: Name
          Value: !Join [ '-' , [ !Ref "AWS::StackName", 'VMSeries-AZ1'] ]
      NetworkInterfaces:
        - NetworkInterfaceId: !Ref VMSeriesManagementENIAZ1
          DeviceIndex: '1'
        - NetworkInterfaceId: !Ref VMSeriesDataENIAZ1
          DeviceIndex: '0'
        - NetworkInterfaceId: !Ref VMSeriesOutBoundENIAZ1
          DeviceIndex: '2'
      IamInstanceProfile: !If [BootstrapVmseries, !Ref VmseriesBootstrapInstanceProfile, ""]
      UserData:  !If
        - BootstrapVmseries
        - !Base64
          Fn::Join:
            - ''
            - - vmseries-bootstrap-aws-s3bucket=
              - !Ref VmseriesBootstrapS3BucketName
        - !Base64
          Fn::Join:
            - ';'
            - - type=dhcp-client
              - ip-address=
              - default-gateway=
              - netmask=
              - ipv6-default-gateway=
              - vm-auth-key=
              - panorama-server=
              - panorama-server-2=
              - tplname=
              - dgname=
              - dns-primary=
              - dns-secondary=
              - authcodes=
              - op-command-modes=jumbo-frame,mgmt-interface-swap
              - plugin-op-commands=aws-gwlb-inspect:enable,aws-gwlb-overlay-routing:enable
              - op-cmd-dpdk-pkt-io=on
              - dhcp-send-hostname=yes
              - dhcp-send-client-id=yes
              - dhcp-accept-server-hostname=yes
              - dhcp-accept-server-domain=yes

# ----------------------------------------------------------------------------------------------------------------------
#   VM-Series Bootstrap IAM Role
# ----------------------------------------------------------------------------------------------------------------------

  VmseriesBootstrapRole:
    Type: AWS::IAM::Role
    Condition: BootstrapVmseries
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: VmseriesBootstrapRolePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: s3:ListBucket
                Resource: !Join
                  - ''
                  - - 'arn:aws:s3:::'
                    - !Ref VmseriesBootstrapS3BucketName
              - Effect: Allow
                Action: s3:GetObject
                Resource: !Join
                  - ''
                  - - 'arn:aws:s3:::'
                    - !Ref VmseriesBootstrapS3BucketName
                    - /*
              - Effect: Allow
                Action:
                  - cloudwatch:*
                Resource:
                  - '*'

  VmseriesBootstrapInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Condition: BootstrapVmseries
    Properties:
      Path: /
      Roles:
        - !Ref VmseriesBootstrapRole

  S3EndpointAz1:
    Type: AWS::EC2::VPCEndpoint
    Condition: BootstrapVmseries
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal: '*'
            Action:
              - 's3:ListBucket'
            Resource: !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref VmseriesBootstrapS3BucketName
          - Effect: Allow
            Principal: '*'
            Action:
              - 's3:GetObject'
            Resource: !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref VmseriesBootstrapS3BucketName
                - '/*'
      RouteTableIds:
        - !Ref VMSeriesDataRouteTableAZ1
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.s3'
      VpcId: !Ref SecurityVPC

# ======================================================================================================================
#   Outputs
# ======================================================================================================================

Outputs:

  GWLBServiceId:
    Description: GWLB Service ID for use for additional GWLB Endpoints
    Value: !GetAtt GWLBESerivceName.Data
    Export:
      Name:
       Fn::Sub: "${AWS::StackName}-GWLBServiceID"
       
  FirewallManagementURL:
    Description: VM-Series management interface URL
    Value: !Join 
      - ''
      - - 'https://'
        - !GetAtt VMSeriesManagementEIPAZ1.PublicIp
